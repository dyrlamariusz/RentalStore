@page "/cart"
@inject ICartService CartService

@code {
    private List<EquipmentDto> _cartItems;

    protected override async Task OnInitializedAsync()
    {
        _cartItems = await CartService.GetCartItems();
    }

    private async Task RemoveFromCart(int equipmentId)
    {
        await CartService.RemoveFromCart(equipmentId);
        _cartItems = await CartService.GetCartItems();
    }
}

<div class="container">
    <h1>Twój koszyk</h1>

    @if (_cartItems != null && _cartItems.Any())
    {
        @foreach (var item in _cartItems)
        {
            <div class="card mb-1">
                <div class="row no-gutters">
                    <div class="col-12 col-md-4 d-flex align-items-center">
                        <div class="p-2">
                            <h5 class="card-title">@item.Name</h5>
                            <p class="card-text">Price: @item.PricePerDay PLN</p>
                        </div>
                    </div>
                    <div class="col-12 col-md-4 d-flex align-items-center justify-content-center">
                        <div class="p-2">
                            counter
                        </div>
                    </div>
                    <div class="col-12 col-md-4 d-flex align-items-center justify-content-end">
                        <div class="p-2">
                            <button class="btn btn-danger" @onclick="() => RemoveFromCart(item.EquipmentId)">Usuń</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>Twój koszyk jest pusty.</p>
    }
</div>

<style>
    .card {
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .card-title {
        font-weight: bold;
    }

    .p-2 {
        padding: 0.5rem !important;
    }
</style>
