@page "/equipment"
@inject IEquipmentService _equipmentService;

<PageTitle>Equipment list</PageTitle>

<div class="container">
    <div class="d-flex flex-row justify-content-around">
        <div class="mw-10">
            <h1 class="text-center" style="display: inline-block">Sports Collection</h1>
        </div>
    </div>

    <div class="container" style="padding: 10px;">
        <div class="d-flex flex-row">
            <div class="p-2 dropdown">
                <button class="btn btn-primary dropdown-toggle" @onclick="() => ToggleDropdown(1)">
                    Sortuj
                </button>
                @if (isDropdownOpen1)
                {
                    <div class="dropdown-menu show" style="position: absolute;">
                        <a class="dropdown-item" @onclick='() => SortBy("NameAsc")' style="cursor: pointer;">Rosnąco nazwie</a>
                        <a class="dropdown-item" @onclick='() => SortBy("NameDesc")' style="cursor: pointer;">Malejąco po nazwie</a>
                    </div>
                }
            </div>
            <div class="p-2 dropdown">
                <button class="btn btn-primary dropdown-toggle" @onclick="() => ToggleDropdown(2)">
                    Kategoria
                </button>
                @if (isDropdownOpen2)
                {
                    <div class="dropdown-menu show" style="position: absolute;">
                        <a class="dropdown-item" @onclick='() => FilterByCategory("Narty zjazdowe")' style="cursor: pointer;">Narty zjazdowe</a>
                        <a class="dropdown-item" @onclick='() => FilterByCategory("Rower")' style="cursor: pointer;">Rower</a>
                        <a class="dropdown-item" style="cursor: pointer;">Kategoria 3</a>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row justify-content-center">
            @foreach (var e in _equipmentList)
            {
                <div class="card m-2" style="width: 18rem;">
                    <img class="card-img-top img-fluid" src="https://t4.ftcdn.net/jpg/02/13/33/89/360_F_213338964_UxvKyZZINlNBO8VhfbjnyZuXK7tn3qiO.jpg" alt="Card image cap">
                    <div class="card-body align-content-center pb-0">
                        <h5 class="card-title fw-bold m-0">@e.Name</h5>
                    </div>
                    <div class="card-body align-content-end">
                        <p class="card-text">@e.Model</p>
                        <p class="card-text">@e.Condition</p>
                        <a href="/equipment/@e.EquipmentId" class="btn btn-primary w-100">Dodaj do koszyka</a>
                        <a href="/equipment/@e.EquipmentId" class="btn btn-primary w-100">See more</a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private IEnumerable<EquipmentDto> _equipmentList = new List<EquipmentDto>();
    private IEnumerable<EquipmentDto> _allEquipment = new List<EquipmentDto>();

    protected override async Task OnInitializedAsync()
    {
        _allEquipment = await _equipmentService.GetAll();
        _equipmentList = _allEquipment;
    }

    private bool isDropdownOpen1 = false;
    private bool isDropdownOpen2 = false;

    private void ToggleDropdown(int dropdownNumber)
    {
        if (dropdownNumber == 1)
        {
            isDropdownOpen1 = !isDropdownOpen1;
            isDropdownOpen2 = false; // Zamknij drugi dropdown
        }
        else if (dropdownNumber == 2)
        {
            isDropdownOpen2 = !isDropdownOpen2;
            isDropdownOpen1 = false; // Zamknij pierwszy dropdown
        }
    }

    private void SortBy(string sortOrder)
    {
        switch (sortOrder)
        {
            case "NameAsc":
                _equipmentList = _allEquipment.OrderBy(e => e.Name);
                break;
            case "NameDesc":
                _equipmentList = _allEquipment.OrderByDescending(e => e.Name);
                break;
        }

        // Zamknij dropdown po sortowaniu
        isDropdownOpen1 = false;
        isDropdownOpen2 = false;
    }

    private void SelectItem(string item)
    {
        isDropdownOpen1 = false;
        isDropdownOpen2 = false;
        Console.WriteLine($"Selected: {item}");
    }

    private void FilterByCategory(string categoryName)
    {
        _equipmentList = _allEquipment.Where(e => e.CategoryName == categoryName).ToList();
    }
}
